apiVersion: kubeadm.k8s.io/v1alpha3
kind: InitConfiguration
nodeRegistration:
{% if CONTAINER_RUNTIME == 'containerd' %}
  criSocket: /run/containerd/containerd.sock
{% elif CONTAINER_RUNTIME == 'cri-o' %}
  criSocket: /run/crio/crio.sock
{% endif %}
---
apiServerCertSANs:
- "{{ LB_DNS }}"
apiVersion: kubeadm.k8s.io/v1alpha3
controlPlaneEndpoint: "{{ LB_DNS }}:{{ APISERVER_PORT }}"
etcd:
  local:
    extraArgs:
      listen-client-urls: "https://127.0.0.1:2379,https://{{ ansible_default_ipv4.address }}:2379"
      advertise-client-urls: "https://{{ ansible_default_ipv4.address }}:2379"
      listen-peer-urls: "https://{{ ansible_default_ipv4.address }}:2380"
      initial-advertise-peer-urls: "https://{{ ansible_default_ipv4.address }}:2380"
{% if inventory_hostname in groups['master-0'] %}
      initial-cluster: "{{ ansible_hostname }}=https://{{ ansible_default_ipv4.address }}:2380"
{% elif inventory_hostname in groups['master-1'] %}
      initial-cluster: "{{ hostvars[groups['master-0'][0]].ansible_hostname }}=https://{{ hostvars[groups['master-0'][0]].ansible_default_ipv4.address }}:2380,{{ ansible_hostname }}=https://{{ ansible_default_ipv4.address }}:2380"
{% else %}
      initial-cluster: "{% for h in groups['masters'] | sort %}{{ hostvars[h].ansible_hostname }}=https://{{ hostvars[h].ansible_default_ipv4.address }}:2380{% if not loop.last %},{% endif %}{% endfor %}"
{% endif %}
{% if inventory_hostname not in groups['master-0'] %}
      initial-cluster-state: existing
{% endif %}
    serverCertSANs:
      - {{ ansible_hostname }}
      - {{ inventory_hostname }}
      - {{ ansible_default_ipv4.address }}
      - {{ ansible_ens2.ipv4.address }}
    peerCertSANs:
      - {{ ansible_hostname }}
      - {{ inventory_hostname }}
      - {{ ansible_default_ipv4.address }}
      - {{ ansible_ens2.ipv4.address }}
kind: ClusterConfiguration
kubernetesVersion: v1.12.1
networking:
  serviceSubnet: "{{ SERVICE_SUBNET }}"
  podSubnet: "{{ POD_SUBNET }}"

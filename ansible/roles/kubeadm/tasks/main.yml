---
- name: copy kubeadm config
  template:
    src: kubeadm-config.yaml
    dest: /tmp/

- name: run kubeadm init on first node
  shell: kubeadm init --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/pki/ca.crt
  when: inventory_hostname in groups['master-0']
  register: kubeadm_init

- debug:
    msg: "{{ hostvars[groups['master-0'][0]].kubeadm_init.stdout_lines | last }}"

- name: make sure the kubernetes folder exists
  file:
    path: /etc/kubernetes/pki/etcd
    state: directory

- name: copy generated config and certs to other hosts
  synchronize:
    src: "{{ item }}"
    dest: "{{ item }}"
  loop:
    - /etc/kubernetes/pki/ca.crt
    - /etc/kubernetes/pki/ca.key
    - /etc/kubernetes/pki/sa.pub
    - /etc/kubernetes/pki/sa.key
    - /etc/kubernetes/pki/front-proxy-ca.crt
    - /etc/kubernetes/pki/front-proxy-ca.key
    - /etc/kubernetes/pki/etcd/ca.crt
    - /etc/kubernetes/pki/etcd/ca.key
    - /etc/kubernetes/admin.conf
  delegate_to: "{{ groups['master-0'][0] }}"
  when: inventory_hostname not in groups['master-0']

- name: generate etcd certs on second node
  shell: kubeadm alpha phase certs all --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/pki/etcd/server.crt
  when: inventory_hostname in groups['master-1']

- name: generate kubelet config on second node
  shell: kubeadm alpha phase kubelet config write-to-disk --config /tmp/kubeadm-config.yaml
  args:
    creates: /var/lib/kubelet/config.yaml
  when: inventory_hostname in groups['master-1']

- name: generate kubelet env on second node
  shell: kubeadm alpha phase kubelet write-env-file --config /tmp/kubeadm-config.yaml
  args:
    creates: /var/lib/kubelet/kubeadm-flags.env
  when: inventory_hostname in groups['master-1']

- name: generate kubelet kubeconfig on second node
  shell: kubeadm alpha phase kubeconfig kubelet --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: inventory_hostname in groups['master-1']

- name: start kubelet
  systemd:
    name: kubelet
    state: restarted
  when: inventory_hostname in groups['master-1']

- name: add etcd to cluster
  shell: "kubectl exec -n kube-system etcd-{{ hostvars[groups['master-0']].ansible_hostname }} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://{{ hostvars[groups['master-0']].ansible_ens3.ipv4.address }}:2379 member add {{ ansible_hostname }} https://{{ ansible_ens3.ipv4.address }}:2380"
  when: inventory_hostname in groups['master-1']

- name: write etcd manifest
  shell: kubeadm alpha phase etcd local --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/manifests/etcd.yaml
  when: inventory_hostname in groups['master-1']

- name: write controlplane configs
  shell: kubeadm alpha phase kubeconfig all --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/controller-manager.conf
  when: inventory_hostname in groups['master-1']

- name: write controlplane manifests
  shell: kubeadm alpha phase controlplane all --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/manifests/kube-controller-manager.yaml
  when: inventory_hostname in groups['master-1']

- name: uploading cri socket annotation
  shell: kubeadm alpha phase kubelet config annotate-cri --config kubeadm-config.yaml
  when: inventory_hostname in groups['master-1']

- name: mark the node as master
  shell: kubeadm alpha phase mark-master --config /tmp/kubeadm-config.yaml
  when: inventory_hostname in groups['master-1']


- name: generate etcd certs on third node
  shell: kubeadm alpha phase certs all --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/pki/etcd/server.crt
  when: inventory_hostname in groups['master-2']

- name: generate kubelet config on third node
  shell: kubeadm alpha phase kubelet config write-to-disk --config /tmp/kubeadm-config.yaml
  args:
    creates: /var/lib/kubelet/config.yaml
  when: inventory_hostname in groups['master-2']

- name: generate kubelet env on third node
  shell: kubeadm alpha phase kubelet write-env-file --config /tmp/kubeadm-config.yaml
  args:
    creates: /var/lib/kubelet/kubeadm-flags.env
  when: inventory_hostname in groups['master-2']

- name: generate kubelet kubeconfig on third node
  shell: kubeadm alpha phase kubeconfig kubelet --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: inventory_hostname in groups['master-2']

- name: start kubelet
  systemd:
    name: kubelet
    state: restarted
  when: inventory_hostname in groups['master-2']

- name: add etcd to cluster
  shell: "kubectl exec -n kube-system etcd-{{ hostvars[groups['master-0']].ansible_hostname }} -- etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --endpoints=https://{{ hostvars[groups['master-0']].ansible_ens3.ipv4.address }}:2379 member add {{ ansible_hostname }} https://{{ ansible_ens3.ipv4.address }}:2380"
  when: inventory_hostname in groups['master-2']

- name: write etcd manifest
  shell: kubeadm alpha phase etcd local --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/manifests/etcd.yaml
  when: inventory_hostname in groups['master-2']

- name: write controlplane configs
  shell: kubeadm alpha phase kubeconfig all --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/controller-manager.conf
  when: inventory_hostname in groups['master-2']

- name: write controlplane manifests
  shell: kubeadm alpha phase controlplane all --config /tmp/kubeadm-config.yaml
  args:
    creates: /etc/kubernetes/manifests/kube-controller-manager.yaml
  when: inventory_hostname in groups['master-2']

- name: uploading cri socket annotation
  shell: kubeadm alpha phase kubelet config annotate-cri --config kubeadm-config.yaml
  when: inventory_hostname in groups['master-2']

- name: mark the node as master
  shell: kubeadm alpha phase mark-master --config /tmp/kubeadm-config.yaml
  when: inventory_hostname in groups['master-2']

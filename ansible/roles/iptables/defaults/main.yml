---
custom_chains: |
  -N TCP
  -N UDP
  -N ICMP
  -N ICMPFLOOD

default_policies: |
  -P INPUT DROP
  -P FORWARD DROP
  -P OUTPUT ACCEPT

default_rules_head: |
  -A INPUT -i lo -j ACCEPT
  -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
  -A INPUT -m conntrack --ctstate INVALID -j DROP
  -A INPUT -p udp -m conntrack --ctstate NEW -j UDP
  -A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP

default_rules_head_v4: |
  {{ default_rules_head }}
  -A INPUT -p icmp -m conntrack --ctstate NEW -j ICMP

default_rules_head_v6: |
  -A INPUT -d ff00::/8 -j ACCEPT
  {{ default_rules_head }}
  -A INPUT -p ipv6-icmp -m conntrack --ctstate NEW -j ICMP

default_rules_fake_v4: |
  -A INPUT -s 127.0.0.0/8 ! -i lo -j DROP

default_rules_fake_v6: |
  -A INPUT -s ::1/128 ! -i lo -j DROP

default_rules_tail: |
  -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
  -A INPUT -p tcp -j REJECT --reject-with tcp-reset
  -A INPUT -j REJECT --reject-with icmp-proto-unreachable
  -A FORWARD -p udp -j REJECT --reject-with icmp-port-unreachable
  -A FORWARD -p tcp -j REJECT --reject-with tcp-reset
  -A FORWARD -j REJECT --reject-with icmp-proto-unreachable

default_tcp: |
  -A TCP -p tcp --dport 22 -j ACCEPT

# Permit useful IMCP packet types for IPv4
# Note: RFC 792 states that all hosts MUST respond to ICMP ECHO requests.
# Blocking these can make diagnosing of even simple faults much more tricky.
# Real security lies in locking down and hardening all services, not by hiding.
# Permit IMCP echo requests (ping) and use ICMPFLOOD chain for preventing ping
# flooding.
default_icmp_v4: |
  -A ICMP -p icmp --icmp-type 0  -m conntrack --ctstate NEW -j ACCEPT
  -A ICMP -p icmp --icmp-type 3  -m conntrack --ctstate NEW -j ACCEPT
  -A ICMP -p icmp --icmp-type 11 -m conntrack --ctstate NEW -j ACCEPT
  -A ICMP -p icmp --icmp-type 8  -m conntrack --ctstate NEW -j ICMPFLOOD

# Permit needed ICMP packet types for IPv6 per RFC 4890.
# Permit IMCP echo requests (ping) and use ICMPFLOOD chain for preventing ping
# flooding.
default_icmp_v6: |
  -A ICMP              -p ipv6-icmp --icmpv6-type 1   -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 2   -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 3   -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 4   -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 133 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 134 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 135 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 136 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 137 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 141 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 142 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 130 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 131 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 132 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 143 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 148 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 149 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 151 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 152 -j ACCEPT
  -A ICMP -s fe80::/10 -p ipv6-icmp --icmpv6-type 153 -j ACCEPT
  -A ICMP              -p ipv6-icmp --icmpv6-type 128 -j ICMPFLOOD

# Chain for preventing ping flooding - up to 6 pings per second from a single 
# source, again with log limiting. Also prevents us from ICMP REPLY flooding 
# some victim when replying to ICMP ECHO from a spoofed source.
default_icmp_flood: |
  -A ICMPFLOOD -m recent --set --name ICMP --rsource
  -A ICMPFLOOD -m recent --update --seconds 1 --hitcount 6 --name ICMP --rsource --rttl -m limit --limit 1/sec --limit-burst 1 -j LOG --log-prefix "iptables[ICMP-flood]: "
  -A ICMPFLOOD -m recent --update --seconds 1 --hitcount 6 --name ICMP --rsource --rttl -j DROP
  -A ICMPFLOOD -j ACCEPT

default_udp_v4: |
  -A UDP -p udp --dport 67:68 --sport 67:68 -j ACCEPT

default_udp_v6: |
  -A UDP -p udp --dport 546 -d fe80::/10 -j ACCEPT
